{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\timin\\\\Dopple final\\\\DoppleDashboard\\\\dopple\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Dashboard.css\";\nimport DoppleHeader from \"../components/DoppleHeader\";\nimport printersLogo from \"../assets/3dPrinters.png\";\nimport servicesLogo from \"../assets/server.png\";\nimport mqtt from \"mqtt\";\nimport ReactPlayer from \"react-player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [printerData, setPrinterData] = useState([]);\n  const [orderData, setOrderData] = useState([]);\n  const [networkServiceData, setNetworkServiceData] = useState([]);\n  const [companyData, setCompanyData] = useState([]);\n  const completed = \"completed\";\n  const confirmed = \"confirmed\";\n  const created = \"created\";\n  const inProduction = \"in_production\";\n  const locked = \"locked\";\n  const shipped = \"shipped\";\n  const statusData = [created, locked, confirmed, inProduction, shipped, completed];\n  useEffect(() => {\n    const MQTT_URI = \"ws://localhost:8000/mqtt\";\n    try {\n      var client = mqtt.connect(MQTT_URI, {\n        resubscribe: true,\n        clientId: \"dopple-dashboard-client\",\n        clean: true\n      });\n      client.subscribe(\"tailor/#\", function (err) {\n        if (!err) {\n          console.log(\"MQTT_SUBSCRIBED\");\n        }\n      });\n      client.on(\"error\", error => {\n        console.log(\"MQTT_ERROR\", error);\n        // client.reconnect();\n      });\n      client.on(\"message\", function (topic, message) {\n        // split topic\n        let topicParts = topic.split(\"/\");\n        let type = topicParts[1];\n        var orderDatas = JSON.parse(message.toString());\n        const data = JSON.parse(message.toString());\n        console.log(type, orderDatas);\n        if (type === \"PRADA\") {\n          const printerStatus = Object.keys(data.values).filter(key => key.startsWith(\"printer\")).map(key => ({\n            id: key,\n            no: key.split(\"_\")[1],\n            status: data.values[key]\n          }));\n          setPrinterData(printerStatus);\n        } else if (type === \"ORDER-PORTAL\") {\n          let companies = [];\n          let cleanData = {};\n          Object.keys(orderDatas.values).forEach(key => {\n            let splitKey = key.split(\"_\");\n            let company = splitKey[2];\n            // let status = splitKey[3];\n            let status = key.replace(\"total_orders_\", \"\").replace(company + \"_\", \"\");\n            if (!companies.includes(company)) {\n              companies.push(company);\n            }\n            cleanData[company] = {\n              ...cleanData[company],\n              [status]: orderDatas.values[key]\n            };\n          });\n          console.log(cleanData);\n          setCompanyData(companies);\n          setOrderData(cleanData);\n        }\n        if (type === \"STATUS-REPORTER\") {\n          let services = Object.keys(orderDatas.values).map(key => {\n            let name = key.replace(\"_status\", \"\");\n            name = name.split(\"_\").map(word => {\n              return word.charAt(0).toUpperCase() + word.slice(1);\n            }).join(\" \");\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `networkItem ${serviceStatusLabel(orderDatas.values[key])}`,\n              children: [\" \", name, \" \", orderDatas.values[key]]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this);\n          });\n          // services = orderDatas.values;\n          console.log(services);\n          setNetworkServiceData(services);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  const toHump = name => {\n    return name.replace(/_(\\w)/g, function (all, letter) {\n      return letter.toUpperCase();\n    });\n  };\n  const serviceStatusLabel = status => {\n    switch (status) {\n      case \"ONLINE\":\n        return \"online\";\n      case \"OFFLINE\":\n        return \"offline\";\n      case \"WARNING\":\n        return \"warning\";\n      default:\n        return \"unknown\";\n    }\n  };\n  const streams = [\"http://localhost:3003/cams/cam1-videos/index.m3u8\", \"http://localhost:3003/cams/cam6-videos/index.m3u8\",\n  // I added dummy links\n  \"http://localhost:3003/cams/cam6-videos/index.m3u8\",\n  // I added dummy links\n  \"http://localhost:3003/cams/cam6-videos/index.m3u8\",\n  // I added dummy links\n  \"http://localhost:3003/cams/cam6-videos/index.m3u8\",\n  // I added dummy links\n  \"http://localhost:3003/cams/cam6-videos/index.m3u8\" // I added dummy links\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(DoppleHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cmaeraViewText\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Camera View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cameraFeeds\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-grid\",\n          children: streams.map((streamUrl, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"camera\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"react-player-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                url: streamUrl,\n                playing: true,\n                controls: true,\n                width: \"100%\",\n                height: \"100%\",\n                muted: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"printers\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"3D Printer Status\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: printersLogo,\n            alt: \"Chip icon that represents the printers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Printer No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"columnPrinterStatus\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), printerData.map(printer => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: printer.no\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"columnPrinterStatus\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"printer-status\",\n                style: {\n                  backgroundColor: printer.status === \"FREE\" ? \"#3f2\" : printer.status === \"PRINTING\" ? \"#ACA45E\" : \"red\"\n                },\n                children: printer.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, printer.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"orderStatus\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [companyData.map(company => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: company\n            }, company, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), statusData.map((key, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"statusLast\",\n            children: [companyData.map(company => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"numberfield\",\n              children: orderData[company][key] || 0\n            }, company, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"columnOrderStatus\",\n                children: toHump(key)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"networkServices\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Network Services\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: servicesLogo,\n            alt: \"Server icon that represents the network services\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"networkFlow\",\n          children: networkServiceData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"bEcbZGeJShq3jV7axTGzKANhuPg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","DoppleHeader","printersLogo","servicesLogo","mqtt","ReactPlayer","jsxDEV","_jsxDEV","Dashboard","_s","printerData","setPrinterData","orderData","setOrderData","networkServiceData","setNetworkServiceData","companyData","setCompanyData","completed","confirmed","created","inProduction","locked","shipped","statusData","MQTT_URI","client","connect","resubscribe","clientId","clean","subscribe","err","console","log","on","error","topic","message","topicParts","split","type","orderDatas","JSON","parse","toString","data","printerStatus","Object","keys","values","filter","key","startsWith","map","id","no","status","companies","cleanData","forEach","splitKey","company","replace","includes","push","services","name","word","charAt","toUpperCase","slice","join","className","serviceStatusLabel","children","fileName","_jsxFileName","lineNumber","columnNumber","toHump","all","letter","streams","streamUrl","index","url","playing","controls","width","height","muted","src","alt","printer","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/timin/Dopple final/DoppleDashboard/dopple/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport DoppleHeader from \"../components/DoppleHeader\";\r\nimport printersLogo from \"../assets/3dPrinters.png\";\r\nimport servicesLogo from \"../assets/server.png\";\r\nimport mqtt from \"mqtt\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst Dashboard = () => {\r\n  const [printerData, setPrinterData] = useState([]);\r\n  const [orderData, setOrderData] = useState([]);\r\n  const [networkServiceData, setNetworkServiceData] = useState([]);\r\n  const [companyData, setCompanyData] = useState([]);\r\n\r\n  const completed = \"completed\";\r\n  const confirmed = \"confirmed\";\r\n  const created = \"created\";\r\n  const inProduction = \"in_production\";\r\n  const locked = \"locked\";\r\n  const shipped = \"shipped\";\r\n  const statusData = [\r\n    created,\r\n    locked,\r\n    confirmed,\r\n    inProduction,\r\n    shipped,\r\n    completed,\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const MQTT_URI = \"ws://localhost:8000/mqtt\";\r\n    try {\r\n      var client = mqtt.connect(MQTT_URI, {\r\n        resubscribe: true,\r\n        clientId: \"dopple-dashboard-client\",\r\n        clean: true,\r\n      });\r\n\r\n      client.subscribe(\"tailor/#\", function (err) {\r\n        if (!err) {\r\n          console.log(\"MQTT_SUBSCRIBED\");\r\n        }\r\n      });\r\n\r\n      client.on(\"error\", (error) => {\r\n        console.log(\"MQTT_ERROR\", error);\r\n        // client.reconnect();\r\n      });\r\n\r\n      client.on(\"message\", function (topic, message) {\r\n        // split topic\r\n        let topicParts = topic.split(\"/\");\r\n        let type = topicParts[1];\r\n        var orderDatas = JSON.parse(message.toString());\r\n        const data = JSON.parse(message.toString());\r\n\r\n        console.log(type, orderDatas);\r\n        if (type === \"PRADA\") {\r\n          const printerStatus = Object.keys(data.values)\r\n            .filter((key) => key.startsWith(\"printer\"))\r\n            .map((key) => ({\r\n              id: key,\r\n              no: key.split(\"_\")[1],\r\n              status: data.values[key],\r\n            }));\r\n          setPrinterData(printerStatus);\r\n        } else if (type === \"ORDER-PORTAL\") {\r\n          let companies = [];\r\n          let cleanData = {};\r\n          Object.keys(orderDatas.values).forEach((key) => {\r\n            let splitKey = key.split(\"_\");\r\n            let company = splitKey[2];\r\n            // let status = splitKey[3];\r\n            let status = key\r\n              .replace(\"total_orders_\", \"\")\r\n              .replace(company + \"_\", \"\");\r\n\r\n            if (!companies.includes(company)) {\r\n              companies.push(company);\r\n            }\r\n\r\n            cleanData[company] = {\r\n              ...cleanData[company],\r\n              [status]: orderDatas.values[key],\r\n            };\r\n          });\r\n\r\n          console.log(cleanData);\r\n          setCompanyData(companies);\r\n          setOrderData(cleanData);\r\n        }\r\n\r\n        if (type === \"STATUS-REPORTER\") {\r\n          let services = Object.keys(orderDatas.values).map((key) => {\r\n            let name = key.replace(\"_status\", \"\");\r\n            name = name\r\n              .split(\"_\")\r\n              .map((word) => {\r\n                return word.charAt(0).toUpperCase() + word.slice(1);\r\n              })\r\n              .join(\" \");\r\n            return (\r\n              <div\r\n                key={key}\r\n                className={`networkItem ${serviceStatusLabel(\r\n                  orderDatas.values[key]\r\n                )}`}\r\n              >\r\n                {\" \"}\r\n                {name} {orderDatas.values[key]}\r\n              </div>\r\n            );\r\n          });\r\n          // services = orderDatas.values;\r\n          console.log(services);\r\n          setNetworkServiceData(services);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  const toHump = (name) => {\r\n    return name.replace(/_(\\w)/g, function (all, letter) {\r\n      return letter.toUpperCase();\r\n    });\r\n  };\r\n\r\n  const serviceStatusLabel = (status) => {\r\n    switch (status) {\r\n      case \"ONLINE\":\r\n        return \"online\";\r\n      case \"OFFLINE\":\r\n        return \"offline\";\r\n      case \"WARNING\":\r\n        return \"warning\";\r\n      default:\r\n        return \"unknown\";\r\n    }\r\n  };\r\n\r\n  const streams = [\r\n    \"http://localhost:3003/cams/cam1-videos/index.m3u8\",\r\n    \"http://localhost:3003/cams/cam6-videos/index.m3u8\", // I added dummy links\r\n    \"http://localhost:3003/cams/cam6-videos/index.m3u8\", // I added dummy links\r\n    \"http://localhost:3003/cams/cam6-videos/index.m3u8\", // I added dummy links\r\n    \"http://localhost:3003/cams/cam6-videos/index.m3u8\", // I added dummy links\r\n    \"http://localhost:3003/cams/cam6-videos/index.m3u8\", // I added dummy links\r\n  ];\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <DoppleHeader />\r\n      <div className=\"cmaeraViewText\">\r\n        <h3>Camera View</h3>\r\n      </div>\r\n      <div className=\"content\">\r\n        <div id=\"cameraFeeds\">\r\n          <div className=\"camera-grid\">\r\n            {streams.map((streamUrl, index) => (\r\n              <div className=\"camera\" key={index}>\r\n                <div className=\"react-player-wrapper\">\r\n                  <ReactPlayer\r\n                    url={streamUrl}\r\n                    playing\r\n                    controls\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    muted={true}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div id=\"printers\">\r\n          <h3>\r\n            3D Printer Status{\" \"}\r\n            <img\r\n              src={printersLogo}\r\n              alt=\"Chip icon that represents the printers\"\r\n            />\r\n          </h3>\r\n          <table>\r\n            <tr>\r\n              <th>Printer No</th>\r\n              <th className=\"columnPrinterStatus\">Status</th>\r\n            </tr>\r\n            {printerData.map((printer) => (\r\n              <tr key={printer.id}>\r\n                <td>{printer.no}</td>\r\n                <td className=\"columnPrinterStatus\">\r\n                  <span\r\n                    className=\"printer-status\"\r\n                    style={{\r\n                      backgroundColor:\r\n                        printer.status === \"FREE\"\r\n                          ? \"#3f2\"\r\n                          : printer.status === \"PRINTING\"\r\n                          ? \"#ACA45E\"\r\n                          : \"red\",\r\n                    }}\r\n                  >\r\n                    {printer.status}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </table>\r\n        </div>\r\n        <div id=\"orderStatus\">\r\n          <table>\r\n            <tr>\r\n              {/* <th>#</th> */}\r\n              {companyData.map((company) => (\r\n                <th key={company}>{company}</th>\r\n              ))}\r\n              <th>Status</th>\r\n            </tr>\r\n            {statusData.map((key, index) => (\r\n              <tr key={index} className='statusLast'>\r\n                {/* <td>{index+1}</td> */}\r\n                {companyData.map((company) => (\r\n                  <td className=\"numberfield\" key={company}>\r\n                    {orderData[company][key] || 0}\r\n                  </td>\r\n                ))}\r\n                <td>\r\n                  <div className=\"columnOrderStatus\">{toHump(key)}</div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </table>\r\n        </div>\r\n        <div id=\"networkServices\">\r\n          <h3>\r\n            Network Services{\" \"}\r\n            <img\r\n              src={servicesLogo}\r\n              alt=\"Server icon that represents the network services\"\r\n            />\r\n          </h3>\r\n          <div className=\"networkFlow\">{networkServiceData}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}